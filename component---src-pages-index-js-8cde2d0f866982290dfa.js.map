{"version":3,"file":"component---src-pages-index-js-8cde2d0f866982290dfa.js","mappings":"gPAsBA,EAhBa,SAAC,GAAsB,IAAD,IAAnBA,QAAAA,OAAmB,MAAT,GAAS,EACjC,OACE,uBAAKC,UCNkB,uCDOrB,0BAEED,EAAQE,KAAI,gBAAkBC,EAAlB,EAAGC,YAAeD,MAASE,EAA3B,EAA2BA,GAA3B,OACV,gBAAC,EAAAC,KAAD,CAAMC,IAAKF,EAAIJ,UCXP,6BDW+BO,GAAE,IAAKC,EAAAA,EAAAA,SAAQN,IACpD,0BAAKA,GAFG,KASnB,EEJYO,EAAO,kBAAM,gBAAC,IAAD,CAAKP,MAAM,iBAAjB,EAepB,EAxBkB,SAAC,GAAa,IAAXQ,EAAW,EAAXA,KACnB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKR,MAAM,SACX,gBAAC,EAAD,CAAMH,QAASW,EAAKC,kBAAkBC,QAG3C,C,mBCMDC,EAAOC,QAAU,CACfN,QArBc,SAACO,GACf,GAAoB,iBAATA,EAAmB,MAAMC,MAAM,iDAAiDD,GAE3F,OAAOA,EACJE,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,kBAAmB,IAC3BA,QAAQ,OAAQ,KAChBC,mBACJ,EAUCC,YARkB,SAACC,GACnB,OAAOA,EAAKC,MAAM,OACfpB,KAAI,SAACqB,EAAWC,GAAZ,gBAAgCA,EAAhC,KAA0CD,CAA1C,IACJE,KAAK,GACT,E","sources":["webpack://3am Historias/./src/components/list/index.js","webpack://3am Historias/./src/components/list/styles.module.scss","webpack://3am Historias/./src/pages/index.js","webpack://3am Historias/./src/utils/index.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { slugify } from \"utils\"\r\nimport * as styles from \"./styles.module.scss\"\r\n\r\nconst List = ({ stories = [] }) => {\r\n  return (\r\n    <div className={styles.listContainer}>\r\n      <ol>\r\n      {\r\n        stories.map(({ frontmatter: { title }, id }) => (\r\n          <Link key={id} className={styles.link} to={`${slugify(title)}`}>\r\n            <li>{title}</li>\r\n          </Link>\r\n        ))\r\n      }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","// extracted by mini-css-extract-plugin\nexport var link = \"styles-module--link--gZ+DS\";\nexport var listContainer = \"styles-module--listContainer--pMFdR\";","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport Seo from \"components/seo\"\nimport List from \"components/list\"\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <List stories={data.allMarkdownRemark.nodes} />\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"3am Historias\" />\n\nexport const query = graphql`\n  query AllStories {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date }) {\n      nodes {\n        id\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","const slugify = (text) => {\r\n  if (typeof text !== 'string') throw Error(`text must be an string and you provide ${typeof text}`)\r\n\r\n  return text\r\n    .replace(/á/g, 'a')\r\n    .replace(/é/g, 'e')\r\n    .replace(/í/g, 'i')\r\n    .replace(/ó/g, 'o')\r\n    .replace(/ú/g, 'u')\r\n    .replace(/[^a-zA-Z0-9 ]*/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .toLocaleLowerCase()\r\n}\r\n\r\nconst addIdToTags = (html) => {\r\n  return html.split('<p>')\r\n    .map((paragraph, index) => `<p id=\"${index}\">${paragraph}`)\r\n    .join('')\r\n}\r\n\r\nmodule.exports = {\r\n  slugify,\r\n  addIdToTags,\r\n}"],"names":["stories","className","map","title","frontmatter","id","Link","key","to","slugify","Head","data","allMarkdownRemark","nodes","module","exports","text","Error","replace","toLocaleLowerCase","addIdToTags","html","split","paragraph","index","join"],"sourceRoot":""}