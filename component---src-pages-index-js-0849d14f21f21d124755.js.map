{"version":3,"file":"component---src-pages-index-js-0849d14f21f21d124755.js","mappings":"6IAWA,SAASA,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzBC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAN,MAAiBM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAN,EAAKG,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EAGN,CAEDH,EAAIa,aAAe,CACjBZ,YAAY,IAQd,K,gKChCA,EAhBa,SAAC,GAAsB,IAAD,IAAnBa,QAAAA,OAAmB,MAAT,GAAS,EACjC,OACE,uBAAKC,UCNkB,uCDOrB,0BAEED,EAAQE,KAAI,gBAAkBd,EAAlB,EAAGe,YAAef,MAAlB,OACV,gBAAC,EAAAgB,KAAD,CAAMH,UCXE,6BDWsBI,GAAE,IAAKC,EAAAA,EAAAA,SAAQlB,IAC3C,0BAAKA,GAFG,KASnB,EECYmB,EAAO,kBAAM,gBAAC,IAAD,CAAKnB,MAAM,iBAAjB,EAcpB,EA5BkB,SAAC,GAAc,IAAZoB,EAAW,EAAXA,KACnB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKpB,MAAM,SACX,gBAAC,EAAD,CAAMY,QAASQ,EAAKC,kBAAkBC,QAG3C,C,mBCADC,EAAOC,QAAU,CACfN,QAfc,SAACO,GACf,GAAoB,iBAATA,EAAmB,MAAMC,MAAM,iDAAiDD,GAE3F,OAAOA,EACJE,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,kBAAmB,IAC3BA,QAAQ,OAAQ,KAChBC,mBACJ,E","sources":["webpack://3am Historias/./src/components/seo.js","webpack://3am Historias/./src/components/list/index.js","webpack://3am Historias/./src/components/list/styles.module.scss","webpack://3am Historias/./src/pages/index.js","webpack://3am Historias/./src/utils/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { slugify } from \"utils\"\r\nimport * as styles from \"./styles.module.scss\"\r\n\r\nconst List = ({ stories = [] }) => {\r\n  return (\r\n    <div className={styles.listContainer}>\r\n      <ul>\r\n      {\r\n        stories.map(({ frontmatter: { title } }) => (\r\n          <Link className={styles.link} to={`${slugify(title)}`}>\r\n            <li>{title}</li>\r\n          </Link>\r\n        ))\r\n      }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","// extracted by mini-css-extract-plugin\nexport var link = \"styles-module--link--gZ+DS\";\nexport var listContainer = \"styles-module--listContainer--pMFdR\";","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport Seo from \"components/seo\"\nimport List from \"components/list\"\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <List stories={data.allMarkdownRemark.nodes} />\n    </Layout>\n  )\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"3Am Historias\" />\n\nexport const query = graphql`\n  query AllStories {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date }) {\n      nodes {\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","const slugify = (text) => {\r\n  if (typeof text !== 'string') throw Error(`text must be an string and you provide ${typeof text}`)\r\n\r\n  return text\r\n    .replace(/á/g, 'a')\r\n    .replace(/é/g, 'e')\r\n    .replace(/í/g, 'i')\r\n    .replace(/ó/g, 'o')\r\n    .replace(/ú/g, 'u')\r\n    .replace(/[^a-zA-Z0-9 ]*/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .toLocaleLowerCase()\r\n}\r\n\r\nmodule.exports = {\r\n  slugify\r\n}"],"names":["Seo","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","stories","className","map","frontmatter","Link","to","slugify","Head","data","allMarkdownRemark","nodes","module","exports","text","Error","replace","toLocaleLowerCase"],"sourceRoot":""}